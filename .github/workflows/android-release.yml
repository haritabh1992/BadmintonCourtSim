name: Android Release

on:
  push:
    branches: [ main ]  # Trigger on push to main branch
  workflow_dispatch:    # Allows manual trigger from GitHub Actions UI

jobs:
  deploy:
    name: Deploy Android Release
    runs-on: ubuntu-latest
    env:
      ANDROID_HOME: /usr/local/lib/android/sdk
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Install Dependencies
        run: npm install

      - name: Generate Expo Assets
        run: |
          npx expo prebuild --platform android --clean

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install Fastlane
        run: |
          cd android
          bundle init
          bundle add fastlane

      - name: Create Keystore File
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 -d > android/app/badminton-release-key.keystore

      - name: Create Keystore Properties
        run: |
          echo "storeFile=badminton-release-key.keystore" > android/keystore.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/keystore.properties

      - name: Create Service Account Key File
        run: echo '${{ secrets.PLAY_STORE_CONFIG_JSON }}' > android/play-store-credentials.json

      - name: Build & Deploy Android Release
        run: |
          cd android
          bundle exec fastlane deploy
        env:
          PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }} 